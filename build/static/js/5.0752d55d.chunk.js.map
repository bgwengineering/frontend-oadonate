{"version":3,"sources":["store/actions/auth/Dashboard.js","components/containers/auth/CompanyForm.js","components/containers/dashboard/views/dashboard/user/Coorporate.js"],"names":["personalProfile","formValues","dispatch","getState","a","axiosInstance","post","tokenConfig","res","type","actionTypes","payload","data","response","detail","updatePersonalProfile","id","patch","stopSubmit","reset","fetchPersonalProfile","get","companyProfile","fetchCompanyProfile","fetchUserDonationsReceived","reduxForm","form","handleSubmit","pristine","submitting","useDispatch","onSubmit","className","Field","name","component","value","disabled","onClick","Coorporate"],"mappings":"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","file":"static/js/5.0752d55d.chunk.js","sourcesContent":["import axiosInstance from \"util/api\";\r\nimport { tokenConfig } from \"util/TokenConfig\";\r\nimport { stopSubmit, reset } from \"redux-form\";\r\n\r\nimport * as actionTypes from \"../ActionTypes\";\r\n\r\nexport const personalProfile = (formValues) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.post(\"/accounts/profile/personal\", { ...formValues }, tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.CREATE_PERSONAL_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    // dispatch(stopSubmit(\"personalForm\"));\r\n    // dispatch(reset(\"personalForm\"));\r\n    dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Personal Profile Created\" });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.CREATE_PERSONAL_PROFILE_FAIL,\r\n    });\r\n    // dispatch(stopSubmit(\"personalForm\"));\r\n    // dispatch(reset(\"personalForm\"));\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: err.response.data.detail });\r\n  }\r\n};\r\n\r\n// update personal profile\r\nexport const updatePersonalProfile = (id, formValues) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.patch(`/accounts/profile/personal/${id}`, { ...formValues }, tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.UPDATE_PERSONAL_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(stopSubmit(\"editForm\"));\r\n    dispatch(reset(\"editForm\"));\r\n    dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Personal Profile updated\" });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.UPDATE_PERSONAL_PROFILE_FAIL\r\n    });\r\n    dispatch(stopSubmit(\"editForm\"));\r\n    dispatch(reset(\"editForm\"));\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload:err.response.data.detail });\r\n  }\r\n};\r\n\r\n// fetch personal profile\r\nexport const fetchPersonalProfile = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.get(\"/accounts/profile/personal\", tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.FETCH_PERSONAL_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_PERSONAL_PROFILE_FAIL,\r\n    });\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: `Detail: ${error.response}` });\r\n  }\r\n};\r\n\r\n// create comapny profile\r\nexport const companyProfile = (formValues) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.post(\r\n      \"accounts/profile/company\",\r\n      { ...formValues },\r\n      tokenConfig(getState)\r\n    );\r\n    dispatch({\r\n      type: actionTypes.CREATE_COMPANY_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(stopSubmit(\"personalForm\"));\r\n    dispatch(reset(\"personalForm\"));\r\n    dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Company Profile Created\" });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.CREATE_COMPANY_PROFILE_FAIL,\r\n    });\r\n    dispatch(stopSubmit(\"companyForm\"));\r\n    dispatch(reset(\"companyForm\"));\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: err.response.data.detail });\r\n  }\r\n};\r\n\r\n// fetch company profile\r\n export const fetchCompanyProfile = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.get(\"/accounts/profile/company\", tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.FETCH_COMPANY_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_COMPANY_PROFILE_FAIL,\r\n    });\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: `Detail: ${error.response}` });\r\n  }\r\n};\r\n\r\n// fetch user donations received\r\n export const fetchUserDonationsReceived = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.get(\"/accounts/user/fundraised\", tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.GET_USER_DONATIONS_RECEIVED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_USER_DONATIONS_FAILED\r\n    });\r\n    dispatch({type: actionTypes.SHOW_ERROR_MESSAGE, payload: `Detail: ${error.response}` });\r\n  }\r\n};\r\n","import React from \"react\";\nimport {Field, reduxForm} from 'redux-form'\nimport {useDispatch} from 'react-redux'\nimport { companyProfile } from \"store/actions/auth/Dashboard\";\n\nconst CompanyForm = ({handleSubmit, pristine, reset, submitting}) => {\n   const dispatch = useDispatch()\n   const Submit = (formValues) => {\n     dispatch (companyProfile(formValues))\n   }\n \n  return (\n      <form onSubmit={handleSubmit(Submit)} className='coorporate-form-container mb-5'>\n      <div className = 'coorporate-reg-heading text-white text-center'>\n      <h4 className='pt-4 pb-4 text-uppercase'>Company registration form</h4>\n\n      </div>\n      <div className='all-fields'>\n      <div>\n        <label className='mt-3'>Phone</label>\n        <div className='coorporate-reg-fields'>\n          <Field name=\"phone\" component=\"input\" type=\"text\" className='field-inputs'/>\n        </div>\n      </div>\n      <div>\n        <label>Adress</label>\n        <div className='coorporate-reg-fields'>\n          <Field name=\"address\" component=\"input\" type=\"text\" className='field-inputs'/>\n        </div>\n      </div>\n      <div className='d-flex mt-3'>\n        <label className='mr-3'>Contact Method:</label>\n        <div >\n          <label >\n            <Field\n              name=\"contact_method\"\n              component=\"input\"\n              type=\"radio\"\n              value=\"Phone Call\"\n              className='field-inputs mr-2 '\n            />\n            Phone Call\n          </label>\n          <label  className='ml-2'>\n            <Field\n              name=\"contact_method\"\n              component=\"input\"\n              type=\"radio\"\n              value=\"Send Email\"\n              className='mr-2'\n            />\n            Email\n          </label>\n        </div>\n      </div>\n      <div className='d-flex mt-3'>\n        <label className='mr-3'>Gender:</label>\n        <div>\n          <label className='mr-3'>\n            <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"Male\" className='mr-2' />\n            Male\n          </label>\n          <label>\n            <Field\n              name=\"gender\"\n              component=\"input\"\n              type=\"radio\"\n              value=\"Female\"\n              className='mr-2'\n            />\n            Female\n          </label>\n        </div>\n      </div>\n      <div>\n        <label className='mt-2'>Country</label>\n        <div>\n          <Field name=\"country\" component='input' />\n       \n        </div>\n      </div>\n      <div className='coorporate-reg-fields'>\n        <label className='mt-4'>City</label>\n        <div>\n          <Field name=\"city\" component=\"input\" type=\"text\" className='field-inputs'/>\n        </div>\n      </div>\n      <div>\n        <label>State</label>\n        <div className='coorporate-reg-fields'>\n          <Field name=\"state\" component=\"input\" type=\"text\" className='field-inputs' />\n        </div>\n      </div>\n      <div className='mt-4'>\n        <button disabled={pristine || submitting} onClick={reset} className='coorporate-form-but mr-3'>\n          Clear Values\n        </button>\n        <button disabled={pristine || submitting} className='coorporate-form-but '>\n          Submit\n        </button>\n      </div>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n   form: 'companyForm'\n})(CompanyForm)\n","import CompanyForm from 'components/containers/auth/CompanyForm'\nimport React from 'react'\n\nconst Coorporate = () => {\n    return (\n        <div>\n        <CompanyForm/>\n        </div>\n    )\n}\n\nexport default Coorporate\n"],"sourceRoot":""}