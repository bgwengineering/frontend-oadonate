{"version":3,"sources":["store/actions/auth/Dashboard.js","components/containers/dashboard/views/dashboard/main/Dashboard.js"],"names":["personalProfile","formValues","dispatch","getState","a","axiosInstance","post","tokenConfig","res","type","actionTypes","payload","data","response","detail","updatePersonalProfile","id","patch","stopSubmit","reset","fetchPersonalProfile","get","companyProfile","fetchCompanyProfile","fetchUserDonationsReceived","WidgetsDropdown","lazy","Dashboard","userState","useSelector","state","userTypeReducer","profile_user","company_user","useDispatch","useEffect","length"],"mappings":"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","file":"static/js/4.4acb0cb1.chunk.js","sourcesContent":["import axiosInstance from \"util/api\";\r\nimport { tokenConfig } from \"util/TokenConfig\";\r\nimport { stopSubmit, reset } from \"redux-form\";\r\n\r\nimport * as actionTypes from \"../ActionTypes\";\r\n\r\nexport const personalProfile = (formValues) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.post(\"/accounts/profile/personal\", { ...formValues }, tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.CREATE_PERSONAL_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    // dispatch(stopSubmit(\"personalForm\"));\r\n    // dispatch(reset(\"personalForm\"));\r\n    dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Personal Profile Created\" });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.CREATE_PERSONAL_PROFILE_FAIL,\r\n    });\r\n    // dispatch(stopSubmit(\"personalForm\"));\r\n    // dispatch(reset(\"personalForm\"));\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: err.response.data.detail });\r\n  }\r\n};\r\n\r\n// update personal profile\r\nexport const updatePersonalProfile = (id, formValues) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.patch(`/accounts/profile/personal/${id}`, { ...formValues }, tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.UPDATE_PERSONAL_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(stopSubmit(\"editForm\"));\r\n    dispatch(reset(\"editForm\"));\r\n    dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Personal Profile updated\" });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.UPDATE_PERSONAL_PROFILE_FAIL\r\n    });\r\n    dispatch(stopSubmit(\"editForm\"));\r\n    dispatch(reset(\"editForm\"));\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload:err.response.data.detail });\r\n  }\r\n};\r\n\r\n// fetch personal profile\r\nexport const fetchPersonalProfile = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.get(\"/accounts/profile/personal\", tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.FETCH_PERSONAL_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_PERSONAL_PROFILE_FAIL,\r\n    });\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: `Detail: ${error.response}` });\r\n  }\r\n};\r\n\r\n// create comapny profile\r\nexport const companyProfile = (formValues) => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.post(\r\n      \"accounts/profile/company\",\r\n      { ...formValues },\r\n      tokenConfig(getState)\r\n    );\r\n    dispatch({\r\n      type: actionTypes.CREATE_COMPANY_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(stopSubmit(\"personalForm\"));\r\n    dispatch(reset(\"personalForm\"));\r\n    dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Company Profile Created\" });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.CREATE_COMPANY_PROFILE_FAIL,\r\n    });\r\n    dispatch(stopSubmit(\"companyForm\"));\r\n    dispatch(reset(\"companyForm\"));\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: err.response.data.detail });\r\n  }\r\n};\r\n\r\n// fetch company profile\r\n export const fetchCompanyProfile = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.get(\"/accounts/profile/company\", tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.FETCH_COMPANY_PROFILE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_COMPANY_PROFILE_FAIL,\r\n    });\r\n    dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: `Detail: ${error.response}` });\r\n  }\r\n};\r\n\r\n// fetch user donations received\r\n export const fetchUserDonationsReceived = () => async (dispatch, getState) => {\r\n  try {\r\n    const res = await axiosInstance.get(\"/accounts/user/fundraised\", tokenConfig(getState));\r\n    dispatch({\r\n      type: actionTypes.GET_USER_DONATIONS_RECEIVED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_USER_DONATIONS_FAILED\r\n    });\r\n    dispatch({type: actionTypes.SHOW_ERROR_MESSAGE, payload: `Detail: ${error.response}` });\r\n  }\r\n};\r\n","import React, { lazy, useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport GetUserType from 'components/containers/dashboard/views/dashboard/main/GetUserType'\nimport { fetchCompanyProfile, fetchPersonalProfile, fetchUserDonationsReceived } from 'store/actions/auth/Dashboard'\n\nconst WidgetsDropdown = lazy(() => import('../../widgets/WidgetsDropdown.js'))\n\nconst Dashboard = () => {\nconst userState = useSelector(state => state.userTypeReducer)\nconst {profile_user, company_user} = userState\n\n\n\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchPersonalProfile());\n    dispatch(fetchCompanyProfile());\n    dispatch(fetchUserDonationsReceived())\n  }, [])\n\n  return (\n    <>\n    <div id=\"dashboard-view\">\n      <WidgetsDropdown />\n      {profile_user.length>=1 || company_user.length>=1 ? <h4>Graph display</h4> :  <GetUserType/> }\n      graph display\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}